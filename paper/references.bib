@article{Waa2007,
author = {Waa},
file = {:Users/gomezhyuuga/Dropbox/TEC CEM/Master/Tesis/Mendeley/2007 - Waa - Web Analytics Definitions Report.pdf:pdf},
journal = {Web Anal. Assoc.},
number = {4.0},
pages = {1--32},
title = {{Web Analytics Definitions [Report]}},
year = {2007}
}
@misc{comScoreIVT,
abstract = {comScore provides sophisticated detection of invalid traffic that goes beyond the standard filtration required for industry accreditation. The recent acquisition of MdotLabs has further enhanced our IVT Triple Detection Technology, which is now integrated into comScore vCE, giving media buyers, ad networks and sellers a trusted method to better protect their traffic and campaigns from IVT threats.},
booktitle = {comScore, Inc},
title = {{Invalid Traffic}},
url = {http://www.comscore.com/Products/Advertising-Analytics/Invalid-Traffic},
year = {2016}
}
@misc{BrianPugh2012,
abstract = {Last year I wrote about the important challenge of staying one step ahead of invalid traffic in the audience measurement business. Today, I'm hoping to re-visit the subject and help further explain the impact of some forms of invalid, non-user initiated traffic. Audiences and impressions form the basis for the monetization of digital media, and it is paramount that what we measure reflect the behavior of actual persons and not of bots or other forms of non-human traffic (NHT). It is a responsibility we at comScore take very seriously.},
author = {{Brian Pugh}},
booktitle = {comScore, Inc},
month = {nov},
shorttitle = {Battling Bots},
title = {{Battling Bots: comScore's Ongoing Efforts to Detect and Remove Non-Human Traffic}},
url = {http://www.comscore.com/esl/Insights/Blog/Battling-Bots-comScores-Ongoing-Efforts-to-Detect-and-Remove-Non-Human-Traffic},
year = {2012}
}
@book{Dong2012,
author = {Dong, G and Bailey, J},
file = {:Users/gomezhyuuga/Dropbox/TEC CEM/Master/Tesis/Mendeley/2012 - Dong, Bailey - Contrast Data Mining Concepts, Algorithms, and Applications.pdf:pdf},
isbn = {9781439854334},
mendeley-groups = {Books},
title = {{Contrast Data Mining: Concepts, Algorithms, and Applications}},
year = {2012}
}
@article{Cytoscape,
abstract = {UNLABELLED Cytoscape.js is an open-source JavaScript-based graph library. Its most common use case is as a visualization software component, so it can be used to render interactive graphs in a web browser. It also can be used in a headless manner, useful for graph operations on a server, such as Node.js. AVAILABILITY AND IMPLEMENTATION Cytoscape.js is implemented in JavaScript. Documentation, downloads and source code are available at http://js.cytoscape.org. CONTACT gary.bader@utoronto.ca.},
author = {Franz, Max and Lopes, Christian T. and Huck, Gerardo and Dong, Yue and Sumer, Onur and Bader, Gary D.},
doi = {10.1093/bioinformatics/btv557},
file = {:Users/gomezhyuuga/Dropbox/TEC CEM/Master/Tesis/Mendeley/2015 - Franz et al. - Cytoscape.js A graph theory library for visualisation and analysis.pdf:pdf},
isbn = {13674811 (Electronic)},
issn = {14602059},
journal = {Bioinformatics},
keywords = {Web},
mendeley-groups = {Stevens report},
mendeley-tags = {Web},
month = {sep},
number = {2},
pages = {309--311},
pmid = {26415722},
publisher = {Oxford University Press},
title = {{Cytoscape.js: A graph theory library for visualization and analysis}},
volume = {32},
year = {2015}
}
@article{D3js,
abstract = {Fig. 1. Interactive visualizations built with D3, running inside Google Chrome. From left to right: calendar view, chord diagram, choro-pleth map, hierarchical edge bundling, scatterplot matrix, grouped {\&} stacked bars, force-directed graph clusters, Voronoi tessellation. Abstractâ€”Data-Driven Documents (D3) is a novel representation-transparent approach to visualization for the web. Rather than hide the underlying scenegraph within a toolkit-specific abstraction, D3 enables direct inspection and manipulation of a native represen-tation: the standard document object model (DOM). With D3, designers selectively bind input data to arbitrary document elements, applying dynamic transforms to both generate and modify content. We show how representational transparency improves expressive-ness and better integrates with developer tools than prior approaches, while offering comparable notational efficiency and retaining powerful declarative components. Immediate evaluation of operators further simplifies debugging and allows iterative development. Additionally, we demonstrate how D3 transforms naturally enable animation and interaction with dramatic performance improvements over intermediate representations.},
archivePrefix = {arXiv},
arxivId = {1408.4626},
author = {Bostock, Michael and Ogievetsky, Vadim and Heer, Jeffrey},
doi = {10.1109/TVCG.2011.185},
eprint = {1408.4626},
isbn = {1077-2626},
issn = {10772626},
journal = {IEEE Trans. Vis. Comput. Graph.},
keywords = {2D graphics.,Information visualization,toolkits,user interfaces},
number = {12},
pages = {2301--2309},
pmid = {22034350},
title = {{D3 data-driven documents}},
volume = {17},
year = {2011}
}
@article{K.Rohila2014,
abstract = {Shortest Path problems are inevitable in road network applications such as city emergency handling and drive guiding system. Basic concepts of network analysis in connection with traffic issues are explored. The traffic condition among a city changes from time to time and there are usually huge amounts of requests occur, it needs to find the solution quickly. The above problems can be rectified through shortest paths by using the Dijkstra's Algorithm. The main objective is the low cost of the implementation. The shortest path problem is to find a path between two vertices (nodes) on a given graph, such that the sum of the weights on its constituent edges is minimized. This problem has been intensively investigated over years, due to its extensive applications in graph theory, artificial intelligence, computer network and the design of transportation systems. The classic Dijkstra's algorithm was designed to solve the single- source shortest path problem for a static graph. It works starting from the source node and calculating the shortest path on the whole network. Noting that an upper bound of the distance between two nodes can be evaluated in advance on the given transportation network. In order to solve the problem, we have been implemented shortest path for road network by using Applets in a programing language java. Software required for this application is jdk1.7.0{\_}01.},
author = {{K. Rohila} and {P. Gouthami} and M, Priya},
journal = {Int. J. Innov. Res. Comput. Commun. Eng.},
keywords = {breadth first search,dijkstra,maximum number of nodes,s algorithm,shortest path},
number = {10},
pages = {6139--6144},
title = {{Dijkstra ' s Shortest Path Algorithm}},
volume = {2},
year = {2014}
}
@book{Russell1995,
abstract = {3rd ed. In this third edition, the authors have updated the treatment of all major areas. A new organizing principle--the representational dimension of atomic, factored, and structured models--has been added. Significant new material has been provided in areas such as partially observable search, contingency planning, hierarchical planning, relational and first-order probability models, regularization and loss functions in machine learning, kernel methods, Web search engines, information extraction, and learning in vision and robotics. The book also includes hundreds of new exercises. Artificial Intelligence: -- Introduction: -- What is AI? -- Foundations of artificial intelligence -- History of artificial intelligence -- State of the art -- Summary, bibliographical and historical notes, exercises -- Intelligent agents: -- Agents and environments -- Good behavior: concept of rationality -- Nature of environments -- Structure of agents -- Summary, bibliographical and historical notes, exercises -- Problem-Solving: -- Solving problems by searching: -- Problem-solving agents -- Example problems -- Searching for solutions -- Uniformed search strategies -- Informed (heuristic) search strategies -- Heuristic functions -- Summary, bibliographical and historical notes, exercises -- Beyond classical search: -- Local search algorithms and optimization problems -- Local search in continuous spaces -- Searching with nondeterministic actions -- Searching with partial observations -- Online search agents and unknown environments -- Summary, bibliographical and historical notes, exercises -- Adversarial search: -- Games -- Optimal decisions in games -- Alpha-beta pruning -- Imperfect real-time decisions -- Stochastic games -- Partially observable games -- State-of-the-art game programs -- Alternative approaches -- Summary, bibliographical and historical notes, exercises -- Constraint satisfaction problems: -- Defining constraint satisfaction problems -- Constraint propagation: inference in CSPs -- Backtracking search for CSPs -- Local search for CSPs -- Structure of problems -- Summary, bibliographical and historical notes, exercises -- Knowledge, Reasoning, And Planning: -- Logical agents: -- Knowledge-based agents -- Wumpus world -- Logic -- Propositional logic: a very simple logic -- Propositional theorem proving -- Effective propositional model checking -- Agents based on propositional logic -- Summary, bibliographical and historical notes, exercises -- First-order logic: -- Representation revisited -- Syntax and semantics of first-order logic -- Using first-order logic -- Knowledge engineering in first-order logic -- Summary, bibliographical and historical notes, exercises -- Inference in first-order logic: -- Propositional vs first-order inference -- Unification and lifting -- Forward chaining -- Backward chaining -- Resolution -- Summary, bibliographical and historical notes, exercises -- Classical planning: -- Definition of classical planning -- Algorithms for planning as state-space search -- Planning graphs -- Other classical planning approaches -- Analysis of planning approaches -- Summary, bibliographical and historical notes, exercises -- Planning and acting in the real world: -- Time, schedules, and resources -- Hierarchical planning -- Planning and acting in nondeterministic domains -- Multiagent planning -- Summary, bibliographical and historical notes, exercises -- Knowledge representation: -- Ontological engineering -- Categories and objects -- Events -- Mental events and mental objects -- Reasoning systems for categories -- Reasoning with default information -- Internet shopping world -- Summary, bibliographical and historical notes, exercises. Uncertain Knowledge And Reasoning: -- Quantifying uncertainty: -- Acting under uncertainty -- Basic probability notation -- Inference using full joint distributions -- Independence -- Bayes' rule and its use -- Wumpus world revisited -- Summary, bibliographical and historical notes, exercises -- Probabilistic reasoning: -- Representing knowledge in an uncertain domain -- Semantics of Bayesian networks -- Efficient representation of conditional distributions -- Exact inference in Bayesian networks -- Approximate inference in Bayesian networks -- Relational and first-order probability models -- Other approaches to uncertain reasoning -- Summary, bibliographical and historical notes, exercises -- Probabilistic reasoning over time: -- Time an uncertainty -- Inference in temporal models -- Hidden markov models -- Kalman filters -- Dynamic Bayesian networks -- Keeping track of many objects -- Summary, bibliographical and historical notes, exercises -- Making simple decisions: -- Combining beliefs and desires under uncertainty -- Basis of utility theory -- Utility functions -- Multiattribute utility functions -- Decision networks -- Value of information -- Decision-theoretic expert systems -- Summary, bibliographical and historical notes, exercises -- Making complex decisions: -- Sequential decision problems -- Value iteration -- Policy iteration -- Partially observable MDPs -- Decisions with multiple agents: game theory -- Mechanism design -- Summary, bibliographical and historical notes, exercises -- Learning: -- Learning from examples: -- Forms of learning -- Supervised learning -- Learning decision trees -- Evaluating and choosing the best hypothesis -- Theory of learning -- Regression and classification with linear models -- Artificial neural networks -- Nonparametric models -- Support vector machines -- Ensemble learning -- Practical machine learning -- Summary, bibliographical and historical notes, exercises -- Knowledge in learning: -- Logical formulation of learning -- Knowledge in learning -- Explanation-based learning -- Learning using relevance information -- Inductive logic programming -- Summary, bibliographical and historical notes, exercises -- Learning probabilistic models: -- Statistical learning -- Learning with complete data -- Learning with hidden variables: the EM algorithm -- Summary, bibliographical and historical notes, exercises -- Reinforcement learning: -- Introduction -- Passive reinforcement learning -- Active reinforcement learning -- Generalization in reinforcement learning -- Policy search -- Applications of reinforcement learning -- Summary, bibliographical and historical notes, exercises -- Communicating, Perceiving, And Acting: -- Natural language processing: -- Language models -- Text classification -- Information retrieval -- Information extraction -- Summary, bibliographical and historical notes, exercises -- Natural language for communication: -- Phrase structure grammars -- Syntactic analysis (parsing) -- Augmented grammars and semantic interpretation -- Machine translation -- Speech recognition -- Summary, bibliographical and historical notes, exercises -- Perception: -- Image formation -- Early image-processing operations -- Object recognition by appearance -- Reconstructing the 3D world -- Object recognition for structural information -- Using vision -- Summary, bibliographical and historical notes, exercises -- Robotics: -- Introduction -- Robot hardware -- Robotic perception -- Planning to move -- Planning uncertain movements -- Moving -- Robotic software architectures -- Application domains -- Summary, bibliographical and historical notes, exercises -- Conclusions: -- Philosophical foundations: -- Weak AI: can machines act intelligently? -- Strong AI: can machines really think? -- Ethics and risks of developing artificial intelligence -- Summary, bibliographical and historical notes, exercises -- AI: the present and future: -- Agent components -- Agent architectures -- Are we going in the right direction? -- What if AI does succeed? -- Mathematical background: -- Complexity analysis and O() notation -- Vectors, matrices, and linear algebra -- Probability distribution -- Notes on languages and algorithms: -- Defining languages with Backus-Naur Form (BNF) -- Describing algorithms with pseudocode -- Online help -- Bibliography -- Index.},
author = {Russell, Steward and Norvig, Peter},
file = {:Users/gomezhyuuga/Dropbox/TEC CEM/Master/Tesis/Mendeley/1995 - Russell, Norvig - Artificial Intelligence - A Modern Approach.pdf:pdf},
isbn = {0136042597},
keywords = {AI,Intelligent Systems},
mendeley-groups = {Books},
mendeley-tags = {AI,Intelligent Systems},
pages = {1132},
publisher = {Prentice Hall},
title = {{Artificial Intelligence - A Modern Approach}},
year = {1995}
}
@book{Cormen2012,
abstract = {3rd ed. This edition has been revised and updated throughout. It includes some new chapters. It features improved treatment of dynamic programming and greedy algorithms as well as a new notion of edge-based flow in the material on flow networks.--[book cover]. I. Foundations. The role of algorithms in computing -- Getting started -- Growth of functions -- Divide-and-conquer -- Probabilistic analysis and randomized algorithms -- II. Sorting and order statistics. Heapsort -- Quicksort -- Sorting in linear time -- Medians and order statistics -- III. Data structures. Elementary data structures -- Hash tables -- Binary search trees -- Red-black trees -- Augmenting data structures -- IV. Advanced design and analysis techniques. Dynamic programming -- Greedy algorithms -- Amortized analysis -- V. Advanced data structures. B-trees -- Fibonacci heaps -- van Emde Boas trees -- Data structures for disjoint sets -- VI. Graph algorithms. Elementary graph algorithms -- Minimum spanning trees -- Single-source shortest paths -- All-pairs shortest paths -- Maximun flow -- VII. Selected topics. Multithreaded algorithms -- Matrix operations -- Linear programming -- Polynomials and the FFT -- Number-theoretic algorithms -- String matching -- Computational geometry -- NP-completeness -- Approximation algorithms -- VIII. Appendix: Mathematical background. Summations -- Sets, etc. -- Counting and probability -- Matrices.},
archivePrefix = {arXiv},
arxivId = {2010 (ret. 29.4.2010)},
author = {Cormen, Thomas H. and Leiserson, Charles E. and Rivest, Ronald L. and Stein, Clifford},
booktitle = {Rev. cl{\'{i}}nica espa{\~{n}}ola},
doi = {10.1016/S0014-2565(12)70009-7},
eprint = {2010 (ret. 29.4.2010)},
file = {:Users/gomezhyuuga/Dropbox/TEC CEM/Master/Tesis/Mendeley/2012 - Cormen et al. - Introduction to algorithms.pdf:pdf},
isbn = {9780262033848},
issn = {1578-1860},
mendeley-groups = {Books},
pages = {1--2},
pmid = {23117645},
publisher = {MIT Press},
title = {{Introduction to algorithms}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/23136379},
volume = {212 Suppl},
year = {2012}
}
@article{Berkhin2005,
abstract = {This survey reviews the research related to PageRank computing. Components of a PageRank vector serve as authority weights for web pages independent of their textual content, solely based on the hyperlink structure of the web. PageRank is typically used as a web search ranking component. This defines the importance of the model and the data structures that underly PageRank processing. Computing even a single PageRank is a difficult computational task. Computing many PageRanks is a much more complex challenge. Recently, significant effort has been invested in building sets of personalized PageRank vectors. PageRank is also used in many diverse applications other than ranking. We are interested in the theoretical foundations of the PageRank formulation, in the acceleration of PageRank computing, in the effects of particular aspects of web graph structure on the optimal organization of computations, and in PageRank stability. We also review alternative models that lead to authority indices similar to PageRan...},
author = {Berkhin, Pavel},
doi = {10.1080/15427951.2005.10129098},
issn = {1542-7951},
journal = {Internet Math.},
number = {1},
pages = {73--120},
title = {{A Survey on PageRank Computing}},
url = {http://www.tandfonline.com/doi/abs/10.1080/15427951.2005.10129098},
volume = {2},
year = {2005}
}
@article{Brandes2001,
abstract = {Motivated by the fast?growing need to compute centrality indices on large, yet very sparse, networks, new algorithms for betweenness are introduced in this paper. They require O(n + m) space and run in O(nm) and O(nm + n2 log n) time on unweighted and weighted networks, respectively, where m is the number of links. Experimental evidence is provided that this substantially increases the range of networks for which centrality analysis is feasible. The betweenness centrality index is essential in the analysis of social networks, but costly to compute. Currently, the fastest known algorithms require ?(n 3) time and ?(n 2) space, where n is the number of actors in the network. Motivated by the fast?growing need to compute centrality indices on large, yet very sparse, networks, new algorithms for betweenness are introduced in this paper. They require O(n + m) space and run in O(nm) and O(nm + n2 log n) time on unweighted and weighted networks, respectively, where m is the number of links. Experimental evidence is provided that this substantially increases the range of networks for which centrality analysis is feasible. The betweenness centrality index is essential in the analysis of social networks, but costly to compute. Currently, the fastest known algorithms require ?(n 3) time and ?(n 2) space, where n is the number of actors in the network.},
archivePrefix = {arXiv},
arxivId = {arXiv:1506.05783v1},
author = {Brandes, Ulrik},
doi = {10.1080/0022250X.2001.9990249},
eprint = {arXiv:1506.05783v1},
file = {:Users/gomezhyuuga/Dropbox/TEC CEM/Master/Tesis/Mendeley/Unknown - Brandes - A Faster Algorithm for Betweenness Centrality.pdf:pdf},
isbn = {0022-250X},
issn = {0022-250X},
journal = {J. Math. Sociol.},
keywords = {algorithms,betweenness centrality,social networks},
mendeley-groups = {Stevens report},
number = {2},
pages = {163--177},
pmid = {967},
title = {{A faster algorithm for betweenness centrality*}},
url = {http://algo.uni-konstanz.de/publications/b-fabc-01.pdf},
volume = {25},
year = {2001}
}
@article{Acarali2016,
abstract = {Botnet use is on the rise, with a growing number of botmasters now switching to the HTTP-based C{\&}C infrastructure. This offers them more stealth by allowing them to blend in with benign web traffic. Several works have been carried out aimed at characterising or detecting HTTP-based bots, many of which use network communication features as identifiers of botnet behaviour. In this paper, we present a survey of these approaches and the network features they use in order to highlight how botnet traffic is currently differentiated from normal traffic. We classify papers by traffic types, and provide a breakdown of features by protocol. In doing so, we hope to highlight the relationships between features at the application, transport and network layers.},
annote = {Usar distancia Levenshtein},
author = {Acarali, Dilara and Rajarajan, Muttukrishnan and Komninos, Nikos and Herwono, Ian},
doi = {10.1016/j.jnca.2016.10.007},
file = {:Users/gomezhyuuga/Dropbox/TEC CEM/Master/Tesis/Mendeley/2016 - Acarali et al. - Survey of approaches and features for the identification of HTTP-based botnet traffic.pdf:pdf},
issn = {10958592},
journal = {J. Netw. Comput. Appl.},
keywords = {Bot,Botnet traffic,Feature analysis,Network analysis,Network-based detection,survey},
mendeley-tags = {survey},
number = {September},
pages = {1--15},
title = {{Survey of approaches and features for the identification of HTTP-based botnet traffic}},
volume = {76},
year = {2016}
}
@book{Diestel2005,
abstract = {3rd ed. The basics -- Matching, covering and packing -- Connectivity -- Planar graphs -- Colouring -- Flows -- Extremal graph theory -- Infinite graphs -- Ramsey theory for graphs -- Hamilton cycles -- Random graphs -- Minors, trees, and WQO.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Diestel, Reinhard.},
booktitle = {Neuroimage},
doi = {10.1016/j.neuroimage.2009.12.119},
eprint = {arXiv:1011.1669v3},
isbn = {978-1-84628-969-9},
issn = {1095-9572},
mendeley-groups = {Stevens report},
number = {3},
pages = {410},
pmid = {20060479},
publisher = {Springer},
title = {{Graph Theory}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/20932916},
volume = {50},
year = {2005}
}
@article{Dogrusoz2009,
abstract = {We present an algorithm for the layout of undirected compound graphs, relaxing restrictions of previously known algorithms in regards to topology and geometry. The algorithm is based on the traditional force-directed layout scheme with extensions to handle multi-level nesting, edges between nodes of arbitrary nesting levels, varying node sizes, and other possible application-specific constraints. Experimental results show that the execution time and quality of the produced drawings with respect to commonly accepted layout criteria are quite satisfactory. The algorithm has also been successfully implemented as part of a pathway integration and analysis toolkit named PATIKA, for drawing complicated biological pathways with compartmental constraints and arbitrary nesting relations to represent molecular complexes and various types of pathway abstractions. ?? 2008 Elsevier Inc. All rights reserved.},
author = {Dogrusoz, Ugur and Giral, Erhan and Cetintas, Ahmet and Civril, Ali and Demir, Emek},
doi = {10.1016/j.ins.2008.11.017},
issn = {00200255},
journal = {Inf. Sci. (Ny).},
keywords = {Bioinformatics,Compound graphs,Force-directed graph layout,Graph drawing,Information visualization},
mendeley-groups = {Stevens report},
month = {mar},
number = {7},
pages = {980--994},
title = {{A layout algorithm for undirected compound graphs}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S0020025508004799},
volume = {179},
year = {2009}
}

@inproceedings{Dwyer2008,
abstract = {A standard approach to large network visualization is to provide an overview of the network and a detailed view of a small component of the graph centred around a focal node. The user explores the network by changing the focal node in the detailed view or by changing the level of detail of a node or cluster. For scalability, fast force-based layout algorithms are used for the overview and the detailed view. However, using the same layout algorithm in both views is problematic since layout for the detailed view has different requirements to that in the overview. Here we present a model in which constrained graph layout algorithms are used for layout in the detailed view. This means the detailed view has high-quality layout including sophisticated edge routing and is customisable by the user who can add placement constraints on the layout. Scalability is still ensured since the slower layout techniques are only applied to the small subgraph shown in the detailed view. The main technical innovations are techniques to ensure that the overview and detailed view remain synchronized, and modifying constrained graph layout algorithms to support smooth, stable layout. The key innovation supporting stability are new dynamic graph layout algorithms that preserve the topology or structure of the network when the user changes the focus node or the level of detail by in situ semantic zooming. We have built a prototype tool and demonstrate its use in two application domains, UML class diagrams and biological networks.},
annote = {Cola layout},
author = {Dwyer, Tim and Marriott, Kim and Schreiber, Falk and Stuckey, Peter J. and Woodward, Michael and Wybrow, Michael},
booktitle = {IEEE Trans. Vis. Comput. Graph.},
doi = {10.1109/TVCG.2008.130},
isbn = {1077-2626},
issn = {10772626},
keywords = {Constraints,Force directed algorithms,Graph,Graph drawing,Multidimensional scaling,Stress majorization},
mendeley-groups = {Books},
mendeley-tags = {Graph},
number = {6},
pages = {1293--1300},
pmid = {18988976},
title = {{Exploration of networks using overview+detail with constraint-based cooperative layout}},
volume = {14},
year = {2008}
}
@article{drazin2012decision,
  title={Decision tree analysis using weka},
  author={Drazin, Sam and Montag, Matt},
  journal={Machine Learning-Project II, University of Miami},
  pages={1--3},
  year={2012}
}